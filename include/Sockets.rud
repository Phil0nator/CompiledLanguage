#ifdef __Linux__
#include "include:linux-base/socket.rud"
#endif


struct TCPSocket{
    
    var fd;
    var address;
    var port;
    var sockaddr_in;


}

function TCPSocket.init(address, port){

    
    var out;
    TCPSocket()->out;
    var addrin;
    sockaddr_in.init(AF_INET, address, port)->addrin;
    out:sockaddr_in = addrin;
    out:address = address;
    out:port = port;
    var fd;
    sys_socket(AF_INET, SOCK_STREAM, SOCK_NOPROT)->fd;
    out:fd = fd;
    return out;




}

function TCPSocket.bind(this){

    var sockaddr_in;
    this:sockaddr_in->sockaddr_in;
    var fd;
    this:fd->fd;
    var out;
    sys_bind(fd, sockaddr_in, SIZEOF_SOCKADDR_IN)->out;
    return out;
    

}

function TCPSocket.listen(this){


    var fd;
    this:fd->fd;
    var out;
    sys_listen(fd,1)->out;
    return out;

}

function TCPSocket.accept(this){

    var newsocket;
    var sockaddr;
    sockaddr_in()->sockaddr;
    TCPSocket()->newsocket;
    var fd;
    this:fd->fd;
    var newfd;
    sys_accept(fd, sockaddr, &SIZEOF_SOCKADDR_IN)->newfd;
    newsocket:fd=newfd;
    newsocket:sockaddr_in = sockaddr;
    var address;
    sockaddr[2]->address;
    var port;
    sockaddr[1]->port;
    newsocket:address=address;
    newsocket:port=port;
    return newsocket;


}


function TCPSocket.send(this, buffer, buflen){

    var fd;
    this:fd->fd;
    var out;
    socketsend(fd, buffer, buflen)->out;
    return out;
}

function TCPSocket.recv(this, destination, amt){

    var fd;
    this:fd->fd;
    var out;
    socketrecv(fd, destination, amt)->out;
    return out;

}


function TCPSocket.getaddr(this){
    var a;
    this:address->a;
    return a;
}

function TCPSocket.getport(this){
    var p;
    this:port->p;
    return p;
}


function TCPSocket.destroy(this){

    var addr;
    this:sockaddr_in->addr;
    sockaddr_in.destroy(addr);
    destroy(this);

}