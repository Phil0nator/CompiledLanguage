#include "include/memory.rud"

final var __PRINTFFLOAT = "%fl";

function fast print_char(char){
    __asm{"
    PRINT_CHAR r9
    NEWLINE
    "}
}
function fast print_string(string){
    __asm{"
    PRINT_STRING [r9]
    NEWLINE
    "}
}


function fast print_integer(number){
    __asm{"
    PRINT_DEC 8, r9
    NEWLINE
    "}
}
function fast printformat(value, format){

    __asm{"
    
    push rax
    push rcx
    mov     rdi, r9                ; set 1st parameter (format)
    mov     rsi, r10                 ; set 2nd parameter (current_number)
    xor     rax, rax                ; because printf is varargs

    ; Stack is already aligned because we pushed three 8 byte registers
    call    printf                  ; printf(format, current_number)

    pop     rcx                     ; restore caller-save register
    pop     rax                     ; restore caller-save register
    
    "}

}


function fast print_two_formats(value, fa, fb){


    __asm{"
    
    push rax
    push rcx
    mov     rdi, r9                ; set 1st parameter (value)
    mov     rsi, r10                 ; set 2nd parameter (fa)
    mov     rdx, r11                ; set 3rd parameter (fb)
    xor     rax, rax                ; because printf is varargs

    ; Stack is already aligned because we pushed three 8 byte registers
    call    printf                  ; printf(format, current_number)

    pop     rcx                     ; restore caller-save register
    pop     rax                     ; restore caller-save register
    
    "}

}


function fast print_formatfloat(value, float fa){

    __asm{"
    align 16
    push rax
    push rcx
    mov     rdi, r9                ; set 1st parameter (format)
    movss xmm0, xmm1
    mov rax, 1

    ; Stack is already aligned because we pushed three 8 byte registers
    call    printf                  ; printf(format, current_number)

    pop     rcx                     ; restore caller-save register
    pop     rax                     ; restore caller-save register
    
    "}


}

function fast print_floatln(float flt){


    __asm{"

        align 16
        mov rdi, __PRINTFFLOAT
        mov rax, 1
        cvtps2pd xmm0, xmm0
        call printf
        NEWLINE

    "}


}

function fast print_float(float flt){

   __asm{"

        align 16
        mov rdi, __PRINTFFLOAT
        mov rax, 1
        cvtps2pd xmm0, xmm0
        call printf
        

    "}


}